<launch>
  <arg name="detector" default="orb"/>
  <arg name="descriptor" default="brief"/>

  <!-- Publish static transform between robot origin and left camera origin-->

  <node pkg="tf2_ros" type="static_transform_publisher" name="imu_cam0_broadcaster" args="0 0 0 0 0 0 imu4 cam0"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="imu_cam1_broadcaster" args="0 0 0 0 0 0 imu4 cam1"/>

  <!-- orientation from GT dataset -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="bl_broadcaster" args="0 0 0 0 0 0 1 base_link imu4"/>


 <!-- relative transforms for GT handling (TODO: recheck, should match starting position of SPTAM) -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="gr_broadcaster2" args="0 0 0 0 0 0 map_prev map"/>
 <node pkg="tf2_ros" type="static_transform_publisher" name="gr_broadcaster" args="0 0 0 0 0 0 1 leica map_prev"/>


  <!-- Clean S-PTAM parameters -->
  <rosparam command="delete" ns="sptam"/>

  <!-- Read S-PTAM parameters file -->
  <rosparam command="load" ns="sptam" file="$(eval find('sptam') + '/configurationFiles/euroc_' + arg('detector') + '_' + arg('descriptor') + '.yaml')"/>
  <param name="sptam/LoopDetectorVocabulary" value="$(find sptam)/bow_voc/DBoW2/brief_mit_malaga_vocabulary.yml.gz" />
  <!-- Nodelet Manager -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager" output="screen" clear_params="true"/>

  <!-- image proc nodelets -->
   <node pkg="nodelet" type="nodelet" name="image_proc_left" args="load image_proc/rectify nodelet_manager" output="screen" clear_params="true">
    <param name="queue_size" value="1"/>
    <remap from="image_mono" to="cam0/image_raw"/>
    <remap from="camera_info" to="cam0/camera_info"/>
    <remap from="image_rect" to="/stereo/left/image_rect"/>
  </node>

   <node pkg="nodelet" type="nodelet" name="image_proc_right" args="load image_proc/rectify nodelet_manager" output="screen" clear_params="true">
    <param name="queue_size" value="1"/>
    <remap from="image_mono" to="cam1/image_raw"/>
    <remap from="camera_info" to="cam1/camera_info"/>
    <remap from="image_rect" to="/stereo/right/image_rect"/>
  </node>


  <!-- Choose between Nodelet and Node S-PTAM -->
  <node pkg="sptam" type="sptam_node" name="sptam" output="screen" >
  <!-- <node pkg="nodelet" type="nodelet" name="sptam" args="load sptam/sptam_nodelet nodelet_manager" output="screen" clear_params="true" >-->

   <param name="approximate_sync" value="false" />

   <param name="use_prediction" value="false"/>
   <param name="publish_transform" value="true"/>
   <!-- <param name="publish_on_fail" value="true"/> -->
   <param name="base_frame" value="base_link"/>

   <param name="prediction_frame" value="map"/>
   <param name="camera_frame" value="cam0"/>  <!-- set left camera frame -->

   <!-- Remap topics  -->
   <!--<remap from="/stereo/left/image_rect"  to="/stereo/left/image_rect_color"/>
   <remap from="/stereo/right/image_rect"  to="/stereo/right/image_rect_color"/>-->
   <remap from="/stereo/left/camera_info"  to="/cam0/camera_info"/>
   <remap from="/stereo/right/camera_info"  to="/cam1/camera_info"/>

   <!-- Remap Odometry message -->
   <remap from="robot/pose"  to="odom"/>

  </node>


	<rosparam command="load" file="$(env HOME)/workspace/data/cams/gazebo/cam0.yaml" ns="/cam0"/>
	<rosparam command="load" file="$(env HOME)/workspace/data/cams/gazebo/cam1.yaml" ns="/cam1"/>

	<node name="stereo_rectifier_node" pkg="dsvo" type="stereo_rectifier_node">
		<param name="cam0_topic" value="/cam0/image_raw" />
		<param name="cam1_topic" value="/cam1/image_raw" />
	</node>

	<node name="stereo_processor_node" pkg="dsvo" type="stereo_processor_node" output="screen" />

	<node name="comparer_node" pkg="dsvo" type="comparer_node" args="odom" />

	<node name="dynamic_reconfigure_load" pkg="dynamic_reconfigure" type="dynparam" args="load /stereo_processor_node $(find dsvo)/cfg/zed.yaml" />

</launch>
